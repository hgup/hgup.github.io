{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"ML/","title":"Introduction","text":"<p>Started learning from this great book called Hands On Machine Learning.</p>"},{"location":"ML/packages/","title":"Package Notes","text":""},{"location":"ML/packages/#pandas-tricks","title":"<code>pandas</code> tricks","text":"<ul> <li><code>pd.cut()</code> helps you cut a series. There are two ways to do so<ul> <li>By specifying how many categories we need like so <code>pd.cut(dataFrame, NO_OF_CATEGORIES)</code></li> <li>By specifying the exact bins of categories like so <code>pd.cut(dataFrame, bins=[0., 1.5, 3.0, 4.5, np.inf], labels= [1,2,3,4,5])</code></li> <li>Labelling is done to give a name (in this case ordinal) to each of the categories</li> </ul> </li> </ul>"},{"location":"ML/packages/#pddataframe","title":"<code>pd.DataFrame</code>","text":"<ul> <li> <p>#concept axis refers to the row, column or a higher dimensional point (e.g. <code>axis=0</code> refers to rows, <code>axis=1</code> refers to columns. <code>axis=3</code> can refer to time, if we have data across years and each row corresponds to the same entity.)</p> </li> <li> <p><code>loc</code> and <code>iloc</code> have this commonly known distinction that the first is used to index by label but the latter by <code>index</code>.</p> </li> <li>But also know that when we take a subset of the dataframe (say, main) (lets say while test-train splitting of the data), the original <code>index</code> values of main df is preserved as the labels of the subsets.</li> <li>e.g. <code>main = [1,2,3,4,5,6,7]</code> are the default labels (for an unlabelled df main), and upon splitting it we get subsets <code>A = [1,3,4,5]</code> and <code>B = [2,6,7]</code></li> <li>So now note that we cannot do <code>A.loc[range(1,5)]</code> since we don't have label 2 in our <code>A</code>. But <code>A.iloc[range(1,5)]</code> will definitely work since indices are always in sequence.</li> </ul>"},{"location":"ML/packages/#tricks","title":"Tricks","text":"<ul> <li><code>list(df)</code> gives us a list of all the columns of the <code>pd.DataFrame</code>. Instead of using <code>df.columns</code> which gives us an <code>pd.Index</code> of column names.</li> </ul>"},{"location":"ML/packages/#pdseries","title":"<code>pd.Series</code>","text":"<ul> <li> <p><code>pd.Series.apply()</code> applies a function to each element of the series and returns another series with the output of each of those function call in the same order.</p> </li> <li> <p>if you want the \"label\" to each of the items in a pandas series, its actually called <code>index</code></p> </li> </ul>"},{"location":"ML/packages/#pdplotting","title":"<code>pd.plotting</code>","text":"<p><pre><code>housing.plot(kind=\"scatter\",x='longitude',y='latitude',alpha=.4,\n             s=housing['population']/100, label=\"population\",\n             c=\"median_house_value\", colorbar=True, cmap=plt.get_cmap('jet'))\n</code></pre>   - <code>s</code> is the radius of the circle.   - <code>alpha</code> opacity.   - <code>c</code> is the color (always give the name of the property (e.g. <code>\"population\"</code> instead of <code>housing['population']</code> whenever possible, here we needed to make an adjustment to the size).   - <code>cmap</code> gives us the color map.</p> <p><code>scatter_matrix</code> is used to plot correlation maps.</p>"},{"location":"ML/packages/#numpy-tricks","title":"<code>numpy</code> tricks","text":""},{"location":"ML/packages/#npndarray","title":"<code>np.ndarray</code>","text":"<ul> <li>N-dimensional array</li> <li>Use <code>iloc</code> to reference by index</li> <li>Use <code>loc</code> to reference by label (==check this==: It is also possible to pass in an index, if label for the data is not available)</li> </ul>"},{"location":"ML/packages/#intuition","title":"Intuition","text":""},{"location":"ML/packages/#indices","title":"Indices","text":"<ul> <li>What does <code>X[:,:]</code> mean?</li> <li>How did you say all rows? How did you say all columns?</li> <li>So, what is <code>X[a:b,:]</code>, (where <code>a</code> and <code>b</code> are integers)?<ul> <li>Rows/Records are lower dimensional, so the first index  (here <code>a:b</code>) always refer to rows. This is what we call <code>axis=0</code></li> <li>Columns/Headers/Attributes are higher dimensional, so the second index (here <code>:</code>) always refer to column. This is what we call <code>axis=1</code></li> <li>Thus, <code>X[a:b,:]</code> means, \"select all columns from the records whose indices start from <code>a</code> and do not equal or exceed <code>b</code>\"</li> <li>Similarly, <code>X[:,:c]</code> means \"select those columns with index \\(&lt;\\) <code>c</code> from all records\"</li> </ul> </li> </ul>"},{"location":"ML/packages/#general-tricks","title":"General Tricks","text":""},{"location":"ML/packages/#typecasting","title":"Typecasting","text":"<ul> <li><code>pandas.core.series.Series</code>.<code>astype(np.int8)</code> to convert string to integers (or float to integers)</li> </ul>"},{"location":"ML/Hands%20on%20ML/03-classification/","title":"Classification","text":""},{"location":"ML/Hands%20on%20ML/03-classification/#precision-recall","title":"Precision &amp; Recall","text":"<p>Precision refers to \"How many times were you right about a Positive?\" This measures the accuracy of positive predictions. </p> \\[ \\text{precision} = \\frac{TP}{TP + FP} \\] <p>Recall refers to \"How many positives could you recall correctly?\". Also refers to sensitivity or True Positive Rate (TPR).  Another way to think about recall is how well you are able to DETECT the positives? Are you able to detect all of them or are there a few misses?</p> \\[ \\text{recall} = \\frac{TP}{TP + FN} \\] <p>Why do we need both precision and recall? </p> <p>Think of it this way. If I correctly identified 10 positives, \\(TP = 10\\). Say, I was very careful, so I didn't make any false positives, \\(FP = 0\\) (e.g. never deem the innocent guilty even if it means you will have to let go of some criminals), so \\(FN \\neq 0\\).</p> <p>This means our precision remains \\(100\\%\\) (careful to ensure there are no \\(FP\\)) but our recall would reduce, since we are letting some criminals go (\\(FN \\neq 0\\)).</p> <ul> <li>Need high precision when its important not to have any False positives (mark as safe. Like 'safe for children' videos or 'safe for eating' or 'safe from virus' to allow someone into your house)</li> <li>Need high recall when its important to catch shoplifters, it will be more inconvenient but its more important to \"GET ALL THE POSITIVES RIGHT\", even when there are more false positives.</li> </ul>"},{"location":"ML/Hands%20on%20ML/03-classification/#f_1-score","title":"\\(F_{1}\\) score","text":"<p>This is the harmonic mean of the precision and recall and gives more value to lower values. So, we get a higher \\(F_{1}\\) score only when both precision and recall are higher $$ F_{1} = \\dfrac{2}{\\dfrac{1}{\\text{Precision}} + \\dfrac{1}{\\text{Recall}}} $$</p>"},{"location":"ML/Hands%20on%20ML/03-classification/#confusion-matrix","title":"Confusion Matrix","text":"<p>The confusion matrix gives a good idea about the accuracy of binary classifiers</p> <pre><code>from sklearn.metrics import confusion_matrix\ny_train_perfect_predictions = y_train_5\nconfusion_matrix(y_train_5, y_train_perfect_predictions)\n</code></pre> <p>Each row represents actual class (Positive / Negative). Each column represents predicted class (+ / -) <pre><code>array([[54579, 0], # non-fives (Negative)\n      [ 0, 5421]], dtype=int64) # fives (Positive)\n</code></pre></p>"},{"location":"ML/Hands%20on%20ML/03-classification/#roc-curve","title":"ROC Curve","text":"<p>Receiver Operating Characteristic is the plot between the <code>Sensitivity or Recall</code> vs  <code>1-Specificity or FPR</code></p> <p>Ratio of Positive instances correctly classified (as positive) $$ \\text{Recall/Sensitivity} = TPR = \\dfrac{TP}{TP + FN} = \\dfrac{TP}{\\text{Total Actual Positives}} $$ Ratio of Negative instances, incorrectly classified (as positive) $$ FPR = \\dfrac{FP}{TN + FP} = \\dfrac{FP}{\\text{Total Actual Negatives}} $$ Ratio of Negative instances, correctly classified (as negative) $$ \\text{Specificity} = TNR = \\dfrac{TN}{TN + FP} = \\dfrac{TN}{\\text{Total Actual Negatives}} $$</p> <p>How to decide between ROC and PR?</p> <p>If positive class is rare or when we care more about false positives than false negatives (e.g. Is a claim fradulent? Positive = fraudulant. In this case we will choose PR because both FP and FN are costly, but the primary concern is the class imbalance. Positive class is rare and thus we choose PR curves.)</p> <p>Receiver Operating Characteristic - Area under the Curve (ROC AUC) is a metric used to compare different classifiers. - Purely random: AUC = 0.5 - Perfect Classifier: AUC = 1.0</p> <p><code>sklearn</code> classifiers generally have one or the other - <code>decision_function()</code> - <code>predict_proba()</code></p>"},{"location":"ML/Hands%20on%20ML/03-classification/#multivariate-classification","title":"Multivariate Classification","text":"<p>There are multiple types of classifiers: - SGD - Random Forest Classifier - Naive Bayes</p> <p>These have native support for multiple classes. But there are others that don't like - Support Vector Machine Classifiers (SVCs) - Logistic Regressions</p> <p>They are strictly binary in nature. However, we can use alternate strategies like <code>OvR</code> (One vs Rest) and <code>OvO</code> (One vs One) strategy in order to use these models for multivariate classification. Say, we have \\(N\\) classes (each having \\(\\frac{1}{N}\\) portion in the data) - <code>OvR</code> fits \\(N\\) binary models. Each model checking for one (positive) and the rest (negative). So, on each model we have to fit 100% of the data. - <code>OvO</code> fits \\(\\dbinom{N}{2}\\) binary models, \\((0,1), (0,2)\\dots(1,2),(1,3)\\dots\\) i.e. pairs of each class against others. Thus each model we have to fit contains only 20% of the data. But the number of models to be fit would be huge (e.g. 10 classes will require 45 models to be fit). So, this can be utilized by models that don't scale well with data. E.g. <code>SVC</code>s.</p>"},{"location":"ML/Hands%20on%20ML/03-classification/#variations","title":"Variations","text":"<ul> <li>Multiclass can have multiple classes (e.g. 0,1,2,3...) for the singular label that is being predicted.</li> <li>Multilabel  can have multiple labels (each having a binary class)</li> <li>Multioutput is a generalization of multilabel where there are multiple labels and each label can have multiple classes.</li> </ul> <p>In essence, every model is just a specification of a multioutput model. $$ \\text{Multilabel} + \\text{Multiclass} = \\text{Multioutput}  $$</p> <p>The author shows an insane example for multioutput where he trains a model to remove the noise from a noisy digit using the <code>knn</code> classifier.</p>"},{"location":"ML/sklearn/","title":"Scikit Learn Notes","text":""},{"location":"ML/sklearn/#sklearn-legend","title":"<code>sklearn</code> Legend","text":"import task <code>sklearn.model_selection</code> Helps in selecting between models.Also, splitting train-test <code>sklearn.impute</code> Missing Values <code>sklearn.preprocessing</code> Change the form of data.Ordinal Categorical \\(\\to\\) Numbers. Make it machine friendly <code>sklearn.base</code> Access base classes to create custom <code>estimator</code>, <code>transformer</code> <code>sklearn.pipeline</code> Create pipelines <code>sklearn.compose</code> Access to column transformers(take care of categorical and numerical columns in the same transformation) <code>sklearn.metrics</code> Score functions; Performance metrics; Distance computations <code>sklearn.tree</code> Decision tree based models <code>sklearn.ensemble</code> Various ensemble methods (e.g. <code>RandomForestRegressor</code>) <code>sklearn.svm</code> Dedicated for Support Vector Machines??? <code>sklearn.multiclass</code> Access to <code>OneVsRestClassifier</code> and <code>OneVsOneClassifier</code> to override default multiclass behavior in Binary classifiers <code>sklearn.neighbors</code> Distance based models"},{"location":"ML/sklearn/#design-philosophy","title":"Design Philosophy","text":""},{"location":"ML/sklearn/#consistency","title":"Consistency","text":"<p>All objects share a consistent and simple interface</p> Object Explanation Example Estimators - Any object that can estimate some parameters based on the estimator- The estimation is done by the <code>.fit()</code> method.- Takes only a dataset as a parameter (or 2 (data and labels) for supervised learning algorithms)- Any other parameter is considered as a <code>hyperparameter</code> (e.g. strategy) Imputer Transformers - Any object that can transform the dataset.- The transformation is performed by the <code>.transform()</code> method, which takes input as a dataset to be transformed- Both <code>.fit()</code> and <code>.transform()</code> can be conveniently be called together (with possible optimization) via the <code>.fit_transform()</code> function Imputer Predictors - Capable of making predictions.- The <code>.predict()</code> method takes a dataset of new instances and returns a dataset of corresponding predictions.- A predictor also has a <code>.score()</code> method that measures the quality of predictions, given a test set (w/ labels, in case of supervised learning). <p>Having learnt the above, now try implementing an [[Imputing Data using Scikit-Learn|imputing strategy in Scikit-Learn]].</p>"},{"location":"ML/sklearn/#inspection","title":"Inspection","text":"<ol> <li>Estimator's hyperparameters are accessible directly via public instance variables, e.g. <code>imputer.strategy</code></li> <li>Estimator's learned parameters are accessible in a similar fashion but with an <code>_</code> (underscore) suffix, e.g. <code>imputer.statistics_</code></li> </ol>"},{"location":"ML/sklearn/#nonproliferation-of-classes","title":"Nonproliferation of Classes","text":"<ol> <li>All outputs given in the form of <code>numpy</code> arrays  or <code>scipy</code> sparse matrices.</li> <li>Hyperparameters are regular python <code>string</code> or <code>numbers</code></li> </ol>"},{"location":"ML/sklearn/#composition","title":"Composition","text":"<p>Existing building blocks 1. Can be reused 2. Can be combined to create a <code>Pipeline</code> (arbitrary sequence of transformations followed by a final estimator)</p>"},{"location":"ML/sklearn/#sensible-defaults","title":"Sensible defaults","text":"<ol> <li>Most common defaults</li> <li>Baseline system is quick to create</li> </ol>"},{"location":"ML/sklearn/#models","title":"Models","text":""},{"location":"ML/sklearn/#classifiers","title":"Classifiers","text":"Model <code>sgd</code> Stochastic Gradient Descent uses <code>.decision_function()</code> Multiple <code>forest</code> Random Forest Classifier uses <code>.predict_proba()</code> Multiple Naive Bayes Multiple <code>svc</code> Support Vector Machine Classifier uses <code>.decision_function()</code> Binary w/ OvO strategy"},{"location":"ML/sklearn/#attributes","title":"Attributes","text":""},{"location":"ML/sklearn/custom-classes-in-sklearn/","title":"Custom Classes in sklearn","text":"<p>We are going to use the housing dataset from this.</p> <pre><code>housing.info()\n</code></pre> <pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;\nInt64Index: 16512 entries, 12655 to 19773\nData columns (total 13 columns):\n #   Column                    Non-Null Count  Dtype   \n---  ------                    --------------  -----   \n 0   longitude                 16512 non-null  float64 \n 1   latitude                  16512 non-null  float64 \n 2   housing_median_age        16512 non-null  float64 \n 3   total_rooms               16512 non-null  float64 \n 4   total_bedrooms            16512 non-null  float64 \n 5   population                16512 non-null  float64 \n 6   households                16512 non-null  float64 \n 7   median_income             16512 non-null  float64 \n 8   ocean_proximity           16512 non-null  object  \n 9   income_cat                16512 non-null  category\n 10  rooms_per_household       16512 non-null  float64 \n 11  bedrooms_per_room         16354 non-null  float64 \n 12  population_per_household  16512 non-null  float64 \ndtypes: category(1), float64(11), object(1)\nmemory usage: 1.7+ MB\n</code></pre> <p>Now, we utilize <code>sklearn.base</code>'s <code>BaseEstimator</code> and <code>TransformerMixin</code> to make a custom transformer:</p> <ul> <li><code>BaseEstimator</code> will give us a nice constructor class so that we don't need take care of all the base <code>*args</code> and <code>**kwargs</code> </li> <li><code>TransformerMixin</code> will give us the <code>.fit_transform()</code> function for free since we have have to define the <code>.fit()</code> and <code>.transform()</code> on our own. This was mentioned in Sklearn Design Consistency section.</li> </ul> <p>Here is what the class looks like, we are trying to add the following attributes to our DF, so we are writing a transformation:</p> <pre><code>from sklearn.base import BaseEstimator, TransformerMixin\n\nrooms_ix, bedrooms_ix, population_ix, households_ix  = 3, 4, 5, 6\n\nclass CombinedAttributesAdder(BaseEstimator, TransformerMixin):\n    def __init__(self, add_bedrooms_per_room = True):\n        self.add_bedrooms_per_room = add_bedrooms_per_room\n\n    def fit(self, X, y=None):\n        return self\n\n    def transform(self, X):\n        rooms_per_household = X[:, rooms_ix] / X[:, households_ix]\n        population_per_household = X[:, population_ix] / X[:, households_ix]\n        if self.add_bedrooms_per_room:\n            bedrooms_per_room = X[:, bedrooms_ix] / X[:, rooms_ix]\n            return np.c_[X, rooms_per_household, population_per_household, bedrooms_per_room] # (1)\n        else:\n            return np.c_[X, rooms_per_household, population_per_household] #(1)\n\n\nattr_adder = CombinedAttributesAdder(add_bedrooms_per_room=False)\nhousing_extra_attribs = attr_adder.transform(housing.values)\n</code></pre> <ol> <li><code>np.c_</code> is for concatenating arrays as columns. <code>np.c_[X, rooms_per_household, population_per_household]</code> will concatenate the already 2d <code>X</code> with the two columns <code>rooms_per_household</code> and <code>population_per_household</code>. If <code>X</code> was 1000x10 then the final output would be 1000x12 (the two new columns added)</li> </ol> <p>Should practice this pattern multiple times to get comfortable and so that thinking about it becomes natural.</p>"},{"location":"blog/","title":"Writings on the Wall","text":""},{"location":"blog/2025/06/20/dont-wait-for-it-just-do-it/","title":"Don't wait for it. Just do it","text":"<p>We wait for the right moment for the right things to happen. But what exactly is the \"right time\"?</p> <p>Isn't it true that a swordsman who waited for years for the battle let his sword rust by saying \"I will only ever wield it when the time is right\" and breaks it in the battle.</p> <p>Isn't it true that there can always be a little better situation than the current one. In that case isn't it wise to have started the deed a bit later than now. But what if things go the other way round? Then the right moment would have been now, but we will never know what tomorrow has in stock for us.</p> <p>So, the best thing we can do is to have a basic plan<sup>1</sup> and move ahead</p> <pre><code>flowchart LR\n    A([\"Start\"])\n    A --&gt; B{\"Wait\"}\n    B --\"Yes\"--&gt; C[/Keep Waiting/]\n    B --\"No\"o--&gt; D[/Seize the moment/]</code></pre> <p>Hope it makes sense one day. Peace</p> <ol> <li> <p>We can go on thinking about the \"perfect\" plan and then doom us in a similar way.\u00a0\u21a9</p> </li> </ol>"},{"location":"blog/2025/06/18/why-i-shifted-to-mkdocs-and-it-just-works/","title":"Why I shifted to mkdocs and it just works!","text":"<p>I have been shifting quite a lot between different options for sharing written content online. It should cater to all of these needs</p> <ul> <li>Regular blogs</li> <li>Walkthroughs (e.g. creating a guide for Actuarial Exams)</li> <li>Highly customizable</li> <li>(yet) Easy to maintain</li> </ul> <p>I started by copying Lee Rob's portfolio website (that also helped me learn Next.js). But to add a new feature, add a new blog post was a big headache.</p> <p>Then, I started using Quartz (since I was using a lot of Obsidian, and it was a no-brainer. That's when I also realized that the system that should be used, should be extremely frictionless and content-focused). However it was not customizable and I found it a bit weird and templatey.</p> <p>Then I tried making two websites on Svelte, taking inspiration of a design from Dribble. But I eventually realized that I was going back to step 1. It was just too hard to maintain.</p> <p>So, I needed a readymade solution. Since, I was already motivated to learn Svelte Kit, I tried looking up someone else's blog example implemented in sveltekit and stumbled upon urara.dev. But it was just someone's implementation and was buggy.</p> <p>I realized that I didn't need something that was too flashy. But something that just works and works very well for all my requirements.</p> <p>That's when I found out about Material theme for mkdocs (which is the website you are reading this blog on). And it was a one-time effort to set it up. After that, all I needed to do was focus on my content. That's all!</p>"},{"location":"blog/2023/06/15/how-do-i-balance-it/","title":"How do I balance it?","text":"<p>Let me tell you a short story. Really, a short one. I wake up at 3 a.m., brush and sit to study in a room quite isolated from the inmates of the hostel. Why? Because, I have a very fickle mind, focus is hard to get. But once I get it, I can do a good magnitude of work without being disturbed.</p> <p></p> <p>But why do I need to get up at 3? Just for the feel of it? No.</p> <p>I am part of our Institute brass band. This means commitment. We practice in the mornings and evenings while the rest of the hostel have their games and study hours respectively. Band is fun, and that reason alone is enough for us to spend our time in this rather than that. However, when you have Actuarial exams to clear, things get a little tricky.</p> <p>You have to find time for your university academics and also practice questions for your upcoming MAS-I and/or MAS-II exams. It means business.</p> <p>So there are three things on my plate</p> <ul> <li>The Brass Band</li> <li>University Exams</li> <li>Actuarial Exams</li> </ul> <p>But this isn\u2019t the end. We follow a tight schedule day in and out, in our hostel at SSSIHL. The main motivation of studying in that place is getting closer to God, as without his grace none of what I am about to tell you would have been possible.</p> <p>So, after college, we are given sufficient time to relax, have tea and then we head for Mandir to sing Bhajans (devotional songs) which if done correctly, gives us the energy to fight against whatever problems we are facing in our lives.</p> <p>Thus if I can consolidate all the \u201cfree\u201d timings that I have in a day, we get:</p> <pre><code>8:00 \u2013 8:45 am (post breakfast)\n12:30 \u2013 1:00 pm (post lunch)\n4:00 \u2013 5:20 pm (tea time)\n6:45 \u2013 7:15 pm (after Mandir)\n7:30 \u2013 8:00 pm (after Dinner)\n</code></pre> <p></p> <p>Quite fragmented right? So, you always have to be in the zone; keep planning about the next step and allow not even a single minute to be wasted. Now that I reflect back, I realise how our institute trains our mind to achieve things even when time is less. This turned out to be a blessing as we will see later.</p> <p>We normally have study hours from 8:00 to 9:40 pm, during which our classmates will be reading academic textbooks and we will be reading music scores.</p> <p>So, what do I do now? I might sound like I am complaining, and it might be true that I was, back then. But what I want to highlight is that when we have a lot on our plate, we ourselves are to blame, and we will have to prioritize and get things done. Otherwise we shouldn\u2019t have opted for it in the first place.</p> <p></p> <p>I chose this institute[^1] because I loved the system (and eventually the reason turned to God). I opted in for the Band because I loved music. I chose Actuarial Science because I was highly inspired by my mentor and my seniors (both students and working Actuaries).</p> <p>I cannot go back. All I needed to do is balance.</p> <p>But wait, it isn\u2019t over yet, I have to revise the list:</p> <ul> <li>The Brass Band</li> <li>University Exam: Takes place in November 2022, just after my Actuarial Exam</li> <li>Actuarial Exam: Writing MAS-I in the November 2022 diet</li> <li>Hostel events</li> </ul> <p>We love to say that our hostel is a place where\u2026</p> <p>\u201cEach lives for the other and all live for God.\u201d</p> <p>We have many subsequently occuring events. They may be house events (like Gryffindor) consisting of Drama, Orchestra, Sports etc. Or they may be festivals like Krishna Asthami, Dusshera and many more. During those events we all come together, participate and give it our best.</p> <p>All our house events take place in the odd semster, and this year especially it was very tightly packed. For instance, this year the orchestra and drama events were spaced a week apart. And we had been told about the dates at a very short notice.</p> <p>Now, I had to choose. I couldn\u2019t do everything, I had to say \u201cno\u201d to something. Obviously I couldn\u2019t cross out the first two items in the list above. So the choice was between writing MAS-I in November or participating in house events.</p> <p>I thought for a while, prayed even and then came to the resolution that its best to skip the Actuarial Exam diet and work hard in the Hostel events. Why? Because, if not then what\u2019s the point? (Yes, referencing you, Stories by Shriram )</p> <p>My reasoning was not flawed. The original plan was to write MAS-I in the odd semester and MAS-II in the even semester. But now that the odd semester was crowded with events, I wouldn\u2019t be able to do well in everything.  </p> <p>But, the even semester was very free (and we wouldn\u2019t have band practice for events during this time). So, there was not much to think about, I had to write two exams in the May 2023 diet.</p> <p>At the end we lost the house cup (and also both the Drama and Orchestra events in which I had actively participated). But we did make memories.</p> <p>After the odd-sem ended, we conduct our sports meet, the last event in which the Band performs. After that got over, I had time to study.</p> <p>But first, I had to prepare for MAS-I. As time flew past quickly, I developed the conciousness that I was not well prepared in MAS-I and the exam was nearing quick. I had other peers who had written and cleared this exam and now they were preparing for MAS-II.</p> <p>Then I consoled myself, that I won\u2019t be able to write both exams in this diet, as I felt sad about it.</p> <p>Enters February. Since, I had only one exam to prepare for I was quite relaxed and prepared nicely for MAS-I. But then I got an itch, \u201cI have so much time now, can\u2019t I study for the other exam too?\u201d I think it was a byproduct of the training I got in the last semester, the blessing I was talking about before.</p> <p>One day, I saw one of my peers studying for MAS-II and asked him how tough is it. Then I took the material and started reading. \u201cMmm\u2026 I think I can do it\u201d, I thought to myself. So, I started preparing silently, without any hopes of writing the exam. Why? Divine intervention. I believe that Swami (how I refer to God) put this thought in my head.</p> <p>This continued. But there was another thing added to our plate. We had sent a video introducing the Actuarial members in our Brass Band to the admins of the Global Conference of Actuaries 2023. They invited us to perform in the Actuarial Gala Function &amp; Awards (AGFA) that would take place in the GCA in March 2023.</p> <p>Super excited as we were, I knew this would mean a lot of study time being spent in practice. Yet, we whole heartedly practiced and it was worth it.</p> <p></p> <p>After returning from Delhi, I knew that it was time for me to go full throttle with my studies. And now that I was a bit involved with MAS-II, I thought, I might actually be able to do it. So, I started waking up earlier and conserved my energy throughout the day to focus on my studies and get through without dozing off.</p> <p>This is why I started waking up at 3.</p> <p>I simultaneously prepared for both the exams. Practicing sample exams. Realising that I am underprepared for MAS-I, I started working hard at that too. Times were not pretty, I tell you. I was even more worried as I had only one month left. But since, I had paid the fees for both the exams, I continued preparing.</p> <p>In the end, I passed both the exams.</p> <p></p>","tags":["repost"]},{"location":"blog/2025/05/30/math-in-mdsvex/","title":"Math in `mdsvex`","text":"<p>In order to make it happen, all you need to do is to follow this particular tutorial:</p> <p>https://mdsvex-math-starter.vercel.app/ It's really that simple. The mistake I did was to NOT follow the version of remark math mentioned here.</p> <pre><code># run the Svelte CLI and follow the prompts\nnpx sv create\n# enter and install the plugins\ncd myProject\nnpm i -D remark-math@3 # (1)\nnpm i -D rehype-mathjax\n</code></pre> <ol> <li>Here they are specifically using <code>v3</code>. Pay attention!</li> </ol> <p>With version 3 of remark math, it works as expected! I prefer using <code>rehype-mathjax</code> as it gives matrices and stuff much better than what <code>katex</code> provides, in my experience.</p>","tags":["math"]},{"location":"blog/2025/05/12/the-mental-keyboard/","title":"The Mental Keyboard","text":"<p>You should be able to run a keyboard in your mind. I try doing it as a mental exercise and see what works and what doesn't.</p> <ol> <li>First imagine all the white and black keys in a keyboard. You should use the black keys to identify the white keys (like if the the white note after the third consecutive black note is a \"B\") </li> </ol> <ol> <li>Then try to identify all the intervals on a keyboard. For example, highlight the notes <code>CG, DA, EB, FC, GD, AE, BGb</code>. You can use some mental shortcuts like<ul> <li>CG Prakash</li> <li>DA: District Attorney</li> <li>EB: Don't ebb around</li> <li>FC: Fan Club</li> <li>GD: Group Discussion</li> <li>AE: \"Aee, don't behave like that\"</li> <li>BGb: A flat BGM (Background music) These ones are completely random, and you can use any that is convenient for you. Just imagine the notes being highlighted and do that more to get quicker at it.</li> </ul> </li> <li>Now, recognize that these are actually in the circle of fifths and recognize where each of these intervals lie in the circle of fifths. This way you will have an idea about where the notation lies on the keyboard vs the circle.</li> </ol>","tags":["mind","music"]},{"location":"blog/2025/06/17/music-tools/","title":"Music Tools","text":"","tags":["music"]},{"location":"blog/2025/06/17/music-tools/#spitfire-labs","title":"Spitfire LABS","text":"<p>An audio library that gives you experimental ahh vibes. The library is so vast that I just started off by downloading whatever sounded interesting to me.</p> <p>They just revamped the app too. Now it looks much easier to use than the previous version. I like the green theme they are going for. And the audio samples are as High-res as ever. They can go upto 4-5 gigs. So ensure you have the right kind of storage.</p> <p>I also go to <code>profile &gt; Content &gt; Default Download location</code> and change it to a custom folder that exists on my other drive so that I don't need to download it again and again every time I switch machines. You know.</p>","tags":["music"]},{"location":"blog/2025/06/17/music-tools/#musescore-studio","title":"MuseScore Studio","text":"<p>Since I joined band back in my second year of Undergrad, I had been exposed to this rich world of musical scores. We had people in the band who arranged original music, a signature of ours being renditions of bhajans. Historically, Finale has been used for arranging. I really liked its fast (unintuitive) UI, but the key bindings, once you get used to it makes you very productive.</p> <p>However some people liked MuseScore 3, which was good. But I wasn't ready to switch. MuseScore 4 came out, but it still didn't cut it because I could feel how sluggish it was in terms of performance.</p> <p>But when Musescore 4.5 dropped, it was game changing. I think this is the biggest update MuseScore has ever received and makes it much more usable, especially when palette searching doesn't take 2 seconds on every keystroke.</p>","tags":["music"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/","title":"How I set up my new Windows machine","text":"<p>This is for a windows installation.</p> <p></p>","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#fresh-installation","title":"Fresh Installation","text":"","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#debloat-windows","title":"Debloat windows","text":"<p>Windows 11 is full of bloatware. NOT ACCEPTABLE! Remove all unnecessary stuff that are thrusted into our laptops/PCs by Microsoft.<sup>1</sup></p> <p>So, we will run this script from Raphire/Win11Debloat.</p> <pre><code># Should work unless outdated, else use the link above\n&amp; ([scriptblock]::Create((irm \"https://debloat.raphi.re/\")))\n</code></pre> <ul> <li>If you see a warning related to <code>winget</code> in the blue window, then install the app installer</li> <li>Go with recommended settings (But do suggest you to clean out the taskbar and start menu.)</li> </ul>","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#realtek-hd-audio-manager","title":"Realtek HD Audio Manager","text":"<p>I remember using the Realtek HD Audio Manager back when Windows 7 was peak. The manager allowed us to set default devices and have some low latency output monitoring</p>","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#other","title":"Other","text":"<pre><code>Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted\n</code></pre>","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#apps","title":"Apps","text":"<p>Here are the apps that I use on my system. One suggestion is to use apps that do most of the things that you require to do.</p>","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#daily","title":"Daily","text":"<ul> <li>Arc Browser</li> <li>Dropbox</li> </ul>","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#academics","title":"Academics","text":"<ul> <li>Zotero</li> <li>Obsidian</li> </ul>","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#dev","title":"Dev","text":"","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#python","title":"Python","text":"<p>For using Tensorflow 2 in machine learning projects, we can download miniconda to get python installed and then load up this environment. This can be activated from anywhere and be used for all datascience projects. A really good base which includes most of the things needed</p> <pre><code>conda env create --file=https://raw.githubusercontent.com/ageron/handson-ml2/refs/heads/master/environment.yml python=3.8\n</code></pre>","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#vs-code","title":"VS Code","text":"<p>I use the vim extension with VS Code. These are my settings and keybindings.</p> settings.json<pre><code>{\n  \"vim.easymotion\": true,\n  \"vim.incsearch\": true,\n  \"vim.useSystemClipboard\": true,\n  \"vim.hlsearch\": true,\n  \"vim.insertModeKeyBindings\": [\n    {\n      \"before\": [\n        \"j\",\n        \"j\"\n      ],\n      \"after\": [\n        \"&lt;Esc&gt;\"\n      ]\n    }\n  ],\n  \"vim.leader\": \"&lt;space&gt;\",\n  \"vim.handleKeys\": {\n    \"&lt;C-a&gt;\": false,\n    \"&lt;C-shift-e&gt;\": false,\n    \"&lt;C-f&gt;\": false,\n    \"&lt;C-p&gt;\": false,\n    \"&lt;C-w&gt;\": false,\n    \"&lt;C-shift-p&gt;\": false,\n  },\n  \"vim.normalModeKeyBindingsNonRecursive\": [\n    {\n      \"before\": [\n        \"Ctrl+e\"\n      ],\n      \"commands\": [\n        \"workbench.files.action.focusFilesExplorer\"\n      ]\n    },\n    // {\n    //   \"before\": [\":\"],\n    //   \"commands\": [\"workbench.action.showCommands\"]\n    // }\n  ],\n  \"vim.visualModeKeyBindingsNonRecursive\": [\n    {\n      \"before\": [ \"&gt;\" ],\n      \"commands\": [ \"editor.action.indentLines\" ]\n    },\n    {\n      \"before\": [ \"&lt;\" ],\n      \"commands\": [ \"editor.action.outdentLines\" ]\n    },\n    // {\n    //   \"before\": [ \"p\" ],\n    //   \"after\": [ \"p\", \"g\", \"v\", \"y\" ]\n    // }\n  ],\n  //   \"vim.statusBarColorControl\": true,\n  //   \"vim.statusBarColors.normal\": [\"#1f1f1f\", \"#ddd\"],\n  //   \"vim.statusBarColors.insert\": [\"9f9f9f\", \"#000\"],\n  //   \"vim.statusBarColors.visual\": [\"#B48EAD\", \"#000\"],\n  //   \"vim.statusBarColors.visualline\": [\"#B48EAD\", \"#000\"],\n  //   \"vim.statusBarColors.visualblock\": [\"#A3BE8C\", \"#000\"],\n  // \"vim.statusBarColors.replace\": \"#D08770\",\n  // \"vim.statusBarColors.commandlineinprogress\": \"#007ACC\",\n  // \"vim.statusBarColors.searchinprogressmode\": \"#007ACC\",\n  // \"vim.statusBarColors.easymotionmode\": \"#007ACC\",\n  // \"vim.statusBarColors.easymotioninputmode\": \"#007ACC\",\n  // \"vim.statusBarColors.surroundinputmode\": \"#007ACC\",\n}\n</code></pre> keybindings.json<pre><code>[\n    {\n        \"key\": \"ctrl+e\",\n        \"command\": \"workbench.action.focusActiveEditorGroup\",\n        \"when\": \"filesExplorerFocus &amp;&amp; !inputFocus\"\n    },\n    {\n      \"key\": \"ctrl+n\",\n      \"command\": \"explorer.newFile\",\n      \"when\": \"filesExplorerFocus\"\n    },\n    {\n      \"key\": \"ctrl+shift+n\",\n      \"command\": \"explorer.newFolder\",\n      \"when\": \"filesExplorerFocus\"\n    },\n    {\n      \"key\": \"r\",\n      \"command\": \"renameFile\",\n      \"when\": \"filesExplorerFocus &amp;&amp; !inputFocus\"\n    },\n    {\n      \"key\": \"delete\",\n      \"command\": \"deleteFile\",\n      \"when\": \"filesExplorerFocus &amp;&amp; !inputFocus\"\n    },\n    {\n      \"key\": \"ctrl+c\",\n      \"command\": \"filesExplorer.copy\",\n      \"when\": \"filesExplorerFocus &amp;&amp; !inputFocus\"\n    },\n    {\n      \"key\": \"ctrl+v\",\n      \"command\": \"filesExplorer.paste\",\n      \"when\": \"filesExplorerFocus &amp;&amp; !inputFocus\"\n    },\n    {\n      \"key\": \"ctrl+x\",\n      \"command\": \"filesExplorer.cut\",\n      \"when\": \"filesExplorerFocus &amp;&amp; !inputFocus\"\n    },\n    {\n      \"key\": \"space\",\n      \"command\": \"filesExplorer.openFilePreserveFocus\",\n      \"when\": \"filesExplorerFocus &amp;&amp; !inputFocus\"\n    },\n]\n</code></pre>","tags":["setup"]},{"location":"blog/2025/05/17/how-i-set-up-my-new-windows-machine/#hobbies","title":"Hobbies","text":"<ul> <li>Musescore</li> <li>Da Vinci Resolve</li> </ul> <ol> <li> <p>The only reason I am still using your OS and not Linux is the ability to use proprietary software\u00a0\u21a9</p> </li> </ol>","tags":["setup"]},{"location":"blog/2025/06/20/tailwind-anywhere/","title":"Tailwind Anywhere!","text":"<p>The <code>tl;dr</code> is the tutoral. If you wanna know why you would want to do something like this, read Why would you wanna use this? section below.</p>","tags":["webdev"]},{"location":"blog/2025/06/20/tailwind-anywhere/#tldr","title":"tl;dr","text":"<p>Source</p> <p>Follow this guide and select the \"Tailwind CLI\" method</p> <p>First up. Install the tailwindcss CLI.</p> <pre><code>pnpm install tailwindcss @tailwindcss/cli\n</code></pre> <p>Then create a file called <code>input.css</code>. Here, you will define the config as you do in a normal CSS file that is going to be using tailwindcss (e.g. think of it as the <code>global.css</code> in a Next.js project)</p> src/input.css<pre><code>@import \"tailwindcss\";\n</code></pre> <p>Run the cli with the <code>--watch</code> mode</p> <pre><code>pnpx @tailwindcss/cli -i ./src/input.css -o ./src/output.css --watch #(1)\n</code></pre> <ol> <li>The <code>--watch</code> mode ensures that whenever you make any edits to any of the html files in the directory which mention a tailwind compatible class name, that class and its css will be added to the <code>output.css</code> file.</li> </ol> <p>Then, import the <code>output.css</code> file in the <code>&lt;head/&gt;</code> of the html document being sourced.</p> <pre><code>&lt;head&gt;\n  &lt;!-- ... --&gt;\n  &lt;link href=\"./output.css\" rel=\"stylesheet\"&gt;\n  &lt;!-- ... --&gt;\n&lt;/head&gt;\n</code></pre> <p>As you keep updating the html file. <code>@tailwindcss/cli</code> will update the <code>output.css</code> file based on your configurations set in <code>input.css</code>. That's how God intended tailwindcss to work from the beginning. </p>","tags":["webdev"]},{"location":"blog/2025/06/20/tailwind-anywhere/#why-would-you-wanna-use-this","title":"Why would you wanna use this?","text":"<p>Ever thought of spinning up a quick static webpage that doesn't need those flashy features of the cutting-edge frameworks that are being used literally everywhere? Well, I don't think so. But, if you are not a native-css person and tend to use tailwindcss just because its very convenient, I have good news for you.</p> <p>You can think of designing the page like how tailwind allows you to do (quickly and efficiently) without worrying about the native css styles. And the best part is that you don't need to think about installing tailwind as a dependency or bundling it or any of that crap (though if its a big project, its recommended, you learn how to do that to save time in the long run). But this isn't what this guide is talking about.</p> <p>We need to do some quick and dirty css work and fast. We don't need to do it the \"right\" or left way. We just want it to work!</p>","tags":["webdev"]},{"location":"exam-5/","title":"Ratemaking &amp; Reserving","text":""},{"location":"exam-5/0.basics/","title":"Basics","text":""},{"location":"exam-5/0.basics/0.2.all-about-data/","title":"All about Data","text":"<p>In order to understand the different aggregation methods (CY, AY, PY), we will use a concrete example so that its crystal clear.</p>"},{"location":"exam-5/0.basics/0.2.all-about-data/#data","title":"Data","text":"Policy Effective Date Expiration Date Initial Policy Premium 1 June 1, 2012 May 31, 2013 480 2 July 1, 2012 December 31, 2012 125 3 March 1, 2013 February 28, 2014 225 4 August 1, 2013 March 31, 2014 300 <p>Also, six months after the policy expires, the initial policy premium on every policy increases by 8% due to the final audit.</p>"},{"location":"exam-5/0.basics/0.2.all-about-data/#calculate","title":"Calculate","text":"<ol> <li>CY 2013 EP a.o. Dec 31, 2013</li> <li>CY 2013 WP a.o. Dec 31, 2013</li> <li>PY 2013  EP a.o. Dec 31, 2013</li> <li>PY 2013 WP a.o. Dec 31, 2014</li> </ol>"},{"location":"exam-5/0.basics/0.2.all-about-data/#principles","title":"Principles","text":"<ul> <li>CY aggregation means to include all the transactions made in that given calendar year. <ul> <li>Meaning, it could be from policies which are not written/effective that year. And when I say \"all the transactions\", it includes any movement of money that happened in that year.</li> <li>Which means for Policy 2, the final audit happens on Jul 1, 2013 (six months after expiration, check table above) and so even though none of Policy 2 premium is earned in CY 2013, its audit amount has to be included in CY 2013 (which is \\(125 \\times 8\\% = 10\\)).</li> </ul> </li> <li>PY aggregation means to include the transactions of all the policies effective in that given policy year.<ul> <li>Meaning, we only look at the effective date of the policy, underlying the transaction and use that blindly to decide whether to include or exclude that transaction.</li> <li>If the policy reopens and has the same policy effective date, then also it has to be included in the original policy year.</li> </ul> </li> <li>WP means all the premium that was written in that particular aggregation (CY/PY).<ul> <li>You have to put the full term premium amount.</li> <li>Think of this story, you go to an UW and buy a policy. He bills you with some money, you pay it to him. He records/writes it in the company's policy database. That \"act\" has to be included in the written premium aggregation.</li> <li>This also means that if you go back and decide to cancel the policy at some later date, he will deduct the amount that you have already earned from that premium and return you some money (which gets \"unwritten\" from the company database). This \"act\" has to be recorded as unwriting of premium (negative written premium) in the database.</li> <li>Now, you think of WP in terms of CY or PY, just check whether the transaction of writing or unwriting premium has to be included in that CY/PY based on the definition of CY/PY and just add or subtract (in case of cancellation).</li> <li>A question: Should premium audits be included in WP? Of course! You can think of it as \"new money\" which needs to be added to that policy. Note that you never go back and edit the old records in the database, you create new transactions to audit.</li> </ul> </li> <li>EP refers to the amount for which coverage to the insured has already been provided.<ul> <li>To illustrate this, imagine you bought an annual policy today (6/19/2025) for $1000. The company is then obligated to provide you with coverage if something happens to you tomorrow (6/20/2025). It is also obligated to to provide you with coverage if something happens to you one day before the policy expires (6/18/2025). But there is a difference between the two dates.</li> <li>Tomorrow, if you decide to cancel the policy, the company is not obligated to provide you with coverage thereafter. However, it has to pay you almost the full amount since it effectively gave you coverage for only one day (today, virtually negligible).</li> <li>However, if you decide to cancel the policy one day before it expires, company will not provide coverage thereafter. BUT, it will only pay you a very little bit of money (the amount that it charged you for one day of coverage). Why? Because it provided you with coverage for the 364 days that has already passed. They have to charge you for it, because if anything would have happened to you in those 364 days, they really would have protected you. And so, charging you for those days makes sense.</li> <li>This is the concept of earning premium. How do we know how much we are paying for each day? The answer is however you assume it to be. If you decide that the premium should be earned uniformly (split all premium equally between all days of coverage) and just calculate a fraction of the total premium.</li> <li>So, if you understood correctly, EP for a PY will naturally contain the full premium amount as of the given date. In this case the only calculation you need to do is IF an \"as of (a.o.)\" date exists. (Note again that you should only include the policy if its effective date lies in the PY)</li> <li>Where as, EP for a CY will be calculated by taking the end point as the end of the calendar year. So just consider the end of the CY as the \"as of\" date.</li> </ul> </li> </ul>"},{"location":"exam-5/0.basics/0.2.all-about-data/#answers","title":"Answers","text":"<p>Now use the following principles to find out the answers to the above</p> <ol> <li>\\(\\$\\ 623.4\\)</li> <li>\\(\\$\\ 573.4\\)</li> <li>\\(\\$\\ 375\\)</li> <li>\\(\\$\\ 576\\)</li> </ol>"},{"location":"exam-5/0.basics/0.1.the-insurance-product/","title":"The Insurance Product","text":"<p>Before we start the discussion about the pricing and reserving, we must be aware about how insurance works.</p>"},{"location":"exam-5/0.basics/0.1.the-insurance-product/0.1.1.lines-of-business/","title":"Lines of Business","text":""},{"location":"exam-5/1.ratemaking/","title":"Ratemaking","text":""},{"location":"exam-5/1.ratemaking/1.2.uw-expenses-lae-and-profits/","title":"UW Expenses, LAE &amp; Profits","text":""},{"location":"exam-5/1.ratemaking/1.3.overall-rate-indication/","title":"Overall Rate Indication","text":""},{"location":"exam-5/1.ratemaking/1.4.claims-made-ratemaking/","title":"Claims-made Ratemaking","text":""},{"location":"exam-5/1.ratemaking/1.6.individual-risk-rating/","title":"Individual Risk Rating","text":""},{"location":"exam-5/1.ratemaking/1.1.adjustments-to-data/","title":"Adjustments to Data","text":""},{"location":"exam-5/1.ratemaking/1.1.adjustments-to-data/1.1.1.adjust-for-anomalies/","title":"Adjust for Anomalies","text":""},{"location":"exam-5/1.ratemaking/1.1.adjustments-to-data/1.1.3.development/","title":"Development","text":""},{"location":"exam-5/1.ratemaking/1.1.adjustments-to-data/1.1.2.on-levelling-data/","title":"On-levelling Data","text":""},{"location":"exam-5/1.ratemaking/1.1.adjustments-to-data/1.1.2.on-levelling-data/1.2.1.one-time-changes/","title":"One-time Changes","text":""},{"location":"exam-5/1.ratemaking/1.1.adjustments-to-data/1.1.2.on-levelling-data/1.2.2.trends/","title":"Trends","text":""},{"location":"exam-5/1.ratemaking/1.5.classification/","title":"Classification","text":""},{"location":"exam-5/1.ratemaking/1.5.classification/1.5.1.univariate/","title":"Univariate","text":""},{"location":"exam-5/1.ratemaking/1.5.classification/1.5.2.multivariate/","title":"Multivariate","text":""},{"location":"exam-5/1.ratemaking/1.5.classification/1.5.3.special-classification/","title":"Special Classification","text":""},{"location":"exam-5/1.ratemaking/1.7.indications-vs-reality/","title":"Indications vs Reality","text":""},{"location":"exam-5/1.ratemaking/1.7.indications-vs-reality/1.7.1.credibility/","title":"Credibility","text":""},{"location":"exam-5/1.ratemaking/1.7.indications-vs-reality/1.7.2.implementation/","title":"Implementation","text":""},{"location":"exam-5/1.ratemaking/1.7.indications-vs-reality/1.7.3.other-considerations/","title":"Other Considerations","text":""},{"location":"exam-5/2.reserving/","title":"Reserving","text":""},{"location":"exam-5/2.reserving/2.0.introduction/","title":"Introduction","text":"<p>Once you have finished ratemaking, you will know how the Insurance product is priced by looking at the past year losses. But now we are waiting for insureds with their claims.</p> <p>Unfortunately, we don't know when they will get into accidents (God Forbid!) and when they will file their claims.</p> <p>Thus, what we need to do is to set up a system by which we have a good estimate about how much to keep aside for paying off the claims.</p> <p>Wait a minute. If we had collected premiums from them, then we definitely have enough rates to pay them off. Why then do we need to estimate how much to keep aside from them. And if so, what are we doing with the money not kept aside?</p> <p>Investments!</p> <p>If you remember, we mentioned that the profit margins are not the only way the insurer gets to earn profit.</p> <p>Once you\u2019ve finished writing, editing, or importing your content, you can publish your work to the web as a docs site. Once published, your site will be accessible online only to your selected audience.</p> <p>You can publish your site and find related settings from your docs site's homepage.</p>"},{"location":"exam-5/2.reserving/2.2.berquist-sherman/","title":"Berquist-Sherman","text":""},{"location":"exam-5/2.reserving/2.3.evaluation-of-techniques/","title":"Evaluation of Techniques","text":""},{"location":"exam-5/2.reserving/2.1.development-techniques/","title":"Development Techniques","text":""},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.1.chain-ladder-dev/","title":"Chain Ladder / Dev","text":""},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.1.chain-ladder-dev/#obtain-the-cumulative-triangle","title":"Obtain the Cumulative Triangle","text":"<p>In the above example, we already have the cumulative paid triangle. If we were given incremental paid, we would have to derive the cumulative paid triangles.</p>"},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.1.chain-ladder-dev/#create-an-age-to-age-ldf-triangle","title":"Create an age-to-age LDF triangle","text":"<p>Just divide the \\(n+1\\) term maturity by the \\(n\\) term maturity (e.g. obtain the 12-24 maturity for 2016 by</p> \\[ \\dfrac{\\text{AY 2016 24 month Cumulative paid}}{\\text{AY 2016 12 month Cumulative paid}} \\] <p>Do the same for all possible maturities and years</p> <p>Info</p> <p>For 2017 its not possible, because only 12-month maturity available</p>"},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.1.chain-ladder-dev/#use-aj-to-select-the-ldfs-for-each-maturity","title":"Use #aj to select the LDFs for each Maturity","text":"<p>It is important to justify your selections, where ever you do them.</p> <p>Usually you can just take an average, but if you find some patterns that you wish to take into account, you should do that (for example, by taking a latest 3 year average if the previous year show some *weird* values)</p>"},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.1.chain-ladder-dev/#compute-the-cdfs","title":"Compute the CDFs","text":"<p>Just the Cumulative Development factor, to make finding the ultimate values more convenient.</p> <p>Simply just product all the LDFs to get the <code>12-ultimate</code> CDF. If you do that for LDFs from 24-36, 36-48 and so on... you will get the <code>24-ult</code> CDF.</p> <p>Success</p> <p>Later, you will find out that the CDFs are very useful in development techniques like Bornhuetter Ferguson, Cape Cod, Case Outstanding and also when we are doing some retroactive testing in the Evaluation section.</p>"},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.1.chain-ladder-dev/#use-cdfs-to-develop-the-year-of-interest-using-the-latest-maturity-value","title":"Use CDFs to develop the year of interest using the latest maturity value.","text":"<p>Viola, just multiply.</p>"},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.2.expected-claims/","title":"Expected Claims","text":""},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.3.bornhuetter-ferguson/","title":"Bornhuetter-Ferguson","text":""},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.4.cape-cod/","title":"Cape Cod","text":""},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.5.frequency-severity/","title":"Frequency-Severity","text":""},{"location":"exam-5/2.reserving/2.1.development-techniques/2.1.6.case-outstanding/","title":"Case Outstanding","text":""},{"location":"exam-5/3.the-delta/3.2.estimating-alae/","title":"Estimating ALAE","text":""},{"location":"exam-5/3.the-delta/3.3.estimating-ulae/","title":"Estimating ULAE","text":""},{"location":"exam-5/3.the-delta/3.1.recoveries/","title":"Recoveries","text":""},{"location":"exam-5/3.the-delta/3.1.recoveries/3.1.1.salvage-and-subrogation/","title":"Salvage &amp; Subrogation","text":""},{"location":"exam-5/3.the-delta/3.1.recoveries/3.1.2.reinsurance/","title":"Reinsurance","text":""},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/category/motivation/","title":"Motivation","text":""},{"location":"blog/category/tutorials/","title":"Tutorials","text":""},{"location":"blog/category/gotchas/","title":"Gotchas","text":""},{"location":"blog/category/thought-experiment/","title":"Thought Experiment","text":""}]}